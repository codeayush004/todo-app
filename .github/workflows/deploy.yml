name: Deploy to AKS (GitOps)

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Login to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Login to ACR
      uses: azure/docker-login@v2
      with:
        login-server: ${{ secrets.ACR_NAME }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and Push Docker Image
      run: |
        IMAGE=${{ secrets.ACR_NAME }}.azurecr.io/todo-app:${{ github.sha }}
        echo "IMAGE=$IMAGE" >> $GITHUB_ENV
        docker build -t $IMAGE .
        for i in {1..5}; do
          docker push $IMAGE && break || (echo "Push failed (attempt $i/5)... retrying in 15s" && sleep 15)
        done

    - name: Set AKS Context
      run: |
        az aks get-credentials \
          --resource-group ${{ secrets.AZ_RESOURCE_GROUP }} \
          --name ${{ secrets.AKS_NAME }} \
          --overwrite-existing

    - name: Deploy to AKS
      run: |
        kubectl apply -f k8s/
        kubectl set image deployment/todo-backend todo=${{ env.IMAGE }} --namespace default --record
        kubectl rollout status deployment/todo-backend --timeout=180s
        kubectl get deployment todo-backend -o=jsonpath='{.spec.template.spec.containers[0].image}'
